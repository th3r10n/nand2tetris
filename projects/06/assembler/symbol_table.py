class SymbolTable():
    """
    docstring
    """
    def __init__(self):
        """
        docstring
        """
        pass
        # this.symbols = {'SP':'0000000000000000', 'LCL':'0000000000000000', 'ARG':'0000000000000000', 'THIS':'0000000000000000', 'THAT':'0000000000000000', 'R0':'0000000000000000', 'R1':'0000000000000000', 'R2':'0000000000000000', 'R3':'0000000000000000', 'R4':'0000000000000000', 'R5':'0000000000000000', 'R6':'0000000000000000', 'R7':'0000000000000000', 'R8':'0000000000000000', 'R9':'0000000000000000', 'R10':'0000000000000000', 'R11':'0000000000000000', 'R12':'0000000000000000', 'R13':'0000000000000000', 'R14':'0000000000000000', 'R15':'0000000000000000', 'R15':'0000000000000000', 'SCREEN':'0000000000000000', 'KBD':'0000000000000000'}

    symbols = {'SP':'0000000000000000', 'LCL':'0000000000000000', 'ARG':'0000000000000000', 'THIS':'0000000000000000', 'THAT':'0000000000000000', 'R0':'0000000000000000', 'R1':'0000000000000000', 'R2':'0000000000000000', 'R3':'0000000000000000', 'R4':'0000000000000000', 'R5':'0000000000000000', 'R6':'0000000000000000', 'R7':'0000000000000000', 'R8':'0000000000000000', 'R9':'0000000000000000', 'R10':'0000000000000000', 'R11':'0000000000000000', 'R12':'0000000000000000', 'R13':'0000000000000000', 'R14':'0000000000000000', 'R15':'0000000000000000', 'R15':'0000000000000000', 'SCREEN':'0000000000000000', 'KBD':'0000000000000000'}     

    @staticmethod
    def add_entry(symbol, address):
        """
        docstring
        """
        symbols[symbol] = address

    @staticmethod
    def contains(symbol):
        """
        docstring
        """
        if symbol in symbols:
            return True
        else:
            return False
    
    @staticmethod
    def get_address(symbol):
        """
        docstring
        """
        return symbols[address]
