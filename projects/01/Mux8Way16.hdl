// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux4Way16(a[0]=a[0], b[0]=b[0], c[0]=c[0], d[0]=d[0], out[0]=w10, a[1]=a[1], b[1]=b[1], c[1]=c[1], d[1]=d[1], out[1]=w11, a[2]=a[2], b[2]=b[2], c[2]=c[2], d[2]=d[2], out[2]=w12, a[3]=a[3], b[3]=b[3], c[3]=c[3], d[3]=d[3], out[3]=w13, a[4]=a[4], b[4]=b[4], c[4]=c[4], d[4]=d[4], out[4]=w14, a[5]=a[5], b[5]=b[5], c[5]=c[5], d[5]=d[5], out[5]=w15, a[6]=a[6], b[6]=b[6], c[6]=c[6], d[6]=d[6], out[6]=w16, a[7]=a[7], b[7]=b[7], c[7]=c[7], d[7]=d[7], out[7]=w17, a[8]=a[8], b[8]=b[8], c[8]=c[8], d[8]=d[8], out[8]=w18, a[9]=a[9], b[9]=b[9], c[9]=c[9], d[9]=d[9], out[9]=w19, a[10]=a[10], b[10]=b[10], c[10]=c[10], d[10]=d[10], out[10]=w110, a[11]=a[11], b[11]=b[11], c[11]=c[11], d[11]=d[11], out[11]=w111, a[12]=a[12], b[12]=b[12], c[12]=c[12], d[12]=d[12], out[12]=w112, a[13]=a[13], b[13]=b[13], c[13]=c[13], d[13]=d[13], out[13]=w113, a[14]=a[14], b[14]=b[14], c[14]=c[14], d[14]=d[14], out[14]=w114, a[15]=a[15], b[15]=b[15], c[15]=c[15], d[15]=d[15], out[15]=w115, sel[0]=sel[0], sel[1]=sel[1]);
	
	Mux4Way16(a[0]=e[0], b[0]=f[0], c[0]=g[0], d[0]=h[0], out[0]=w20, a[1]=e[1], b[1]=f[1], c[1]=g[1], d[1]=h[1], out[1]=w21, a[2]=e[2], b[2]=f[2], c[2]=g[2], d[2]=h[2], out[2]=w22, a[3]=e[3], b[3]=f[3], c[3]=g[3], d[3]=h[3], out[3]=w23, a[4]=e[4], b[4]=f[4], c[4]=g[4], d[4]=h[4], out[4]=w24, a[5]=e[5], b[5]=f[5], c[5]=g[5], d[5]=h[5], out[5]=w25, a[6]=e[6], b[6]=f[6], c[6]=g[6], d[6]=h[6], out[6]=w26, a[7]=e[7], b[7]=f[7], c[7]=g[7], d[7]=h[7], out[7]=w27, a[8]=e[8], b[8]=f[8], c[8]=g[8], d[8]=h[8], out[8]=w28, a[9]=e[9], b[9]=f[9], c[9]=g[9], d[9]=h[9], out[9]=w29, a[10]=e[10], b[10]=f[10], c[10]=g[10], d[10]=h[10], out[10]=w210, a[11]=e[11], b[11]=f[11], c[11]=g[11], d[11]=h[11], out[11]=w211, a[12]=e[12], b[12]=f[12], c[12]=g[12], d[12]=h[12], out[12]=w212, a[13]=e[13], b[13]=f[13], c[13]=g[13], d[13]=h[13], out[13]=w213, a[14]=e[14], b[14]=f[14], c[14]=g[14], d[14]=h[14], out[14]=w214, a[15]=e[15], b[15]=f[15], c[15]=g[15], d[15]=h[15], out[15]=w215, sel[0]=sel[0], sel[1]=sel[1]);
	
	Mux16(a[0]=w10, b[0]=w20, out[0]=out[0], a[1]=w11, b[1]=w21, out[1]=out[1], a[2]=w12, b[2]=w22, out[2]=out[2], a[3]=w13, b[3]=w23, out[3]=out[3], a[4]=w14, b[4]=w24, out[4]=out[4], a[5]=w15, b[5]=w25, out[5]=out[5], a[6]=w16, b[6]=w26, out[6]=out[6], a[7]=w17, b[7]=w27, out[7]=out[7], a[8]=w18, b[8]=w28, out[8]=out[8], a[9]=w19, b[9]=w29, out[9]=out[9], a[10]=w110, b[10]=w210, out[10]=out[10], a[11]=w111, b[11]=w211, out[11]=out[11], a[12]=w112, b[12]=w212, out[12]=out[12], a[13]=w113, b[13]=w213, out[13]=out[13], a[14]=w114, b[14]=w214, out[14]=out[14], a[15]=w115, b[15]=w215, out[15]=out[15], sel=sel[2]);
}