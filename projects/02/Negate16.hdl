// File name: projects/02/Negate16.hdl

/**
 * 16-bit conditional negation:
 * for i = 0..15 out[i] = in[i] if sel = 0 else out[i] = not in[i]
 */

CHIP Negate16 {
    IN in[16], sel;
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux16(sel=sel, in[0]=in[0], a[0]=a0, b[0]=b0, in[1]=in[1], a[1]=a1, b[1]=b1, in[2]=in[2], a[2]=a2, b[2]=b2, in[3]=in[3], a[3]=a3, b[3]=b3, in[4]=in[4], a[4]=a4, b[4]=b4, in[5]=in[5], a[5]=a5, b[5]=b5, in[6]=in[6], a[6]=a6, b[6]=b6, in[7]=in[7], a[7]=a7, b[7]=b7, in[8]=in[8], a[8]=a8, b[8]=b8, in[9]=in[9], a[9]=a9, b[9]=b9, in[10]=in[10], a[10]=a10, b[10]=b10, in[11]=in[11], a[11]=a11, b[11]=b11, in[12]=in[12], a[12]=a12, b[12]=b12, in[13]=in[13], a[13]=a13, b[13]=b13, in[14]=in[14], a[14]=a14, b[14]=b14, in[15]=in[15], a[15]=a15, b[15]=b15);
	
	Not16(in[0]=b0, out[0]=out0, in[1]=b1, out[1]=out1, in[2]=b2, out[2]=out2, in[3]=b3, out[3]=out3, in[4]=b4, out[4]=out4, in[5]=b5, out[5]=out5, in[6]=b6, out[6]=out6, in[7]=b7, out[7]=out7, in[8]=b8, out[8]=out8, in[9]=b9, out[9]=out9, in[10]=b10, out[10]=out10, in[11]=b11, out[11]=out11, in[12]=b12, out[12]=out12, in[13]=b13, out[13]=out13, in[14]=b14, out[14]=out14, in[15]=b15, out[15]=out15);
	
	Mux16(sel=sel, a[0]=a0, b[0]=out0, out[0]=out[0], a[1]=a1, b[1]=out1, out[1]=out[1], a[2]=a2, b[2]=out2, out[2]=out[2], a[3]=a3, b[3]=out3, out[3]=out[3], a[4]=a4, b[4]=out4, out[4]=out[4], a[5]=a5, b[5]=out5, out[5]=out[5], a[6]=a6, b[6]=out6, out[6]=out[6], a[7]=a7, b[7]=out7, out[7]=out[7], a[8]=a8, b[8]=out8, out[8]=out[8], a[9]=a9, b[9]=out9, out[9]=out[9], a[10]=a10, b[10]=out10, out[10]=out[10], a[11]=a11, b[11]=out11, out[11]=out[11], a[12]=a12, b[12]=out12, out[12]=out[12], a[13]=a13, b[13]=out13, out[13]=out[13], a[14]=a14, b[14]=out14, out[14]=out[14], a[15]=a15, b[15]=out15, out[15]=out[15]);
	
}